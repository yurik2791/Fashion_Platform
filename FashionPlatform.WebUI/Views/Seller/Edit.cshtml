@model FashionPlatform.WebUI.Models.ProductViewModel

@{
    ViewBag.Title = "Admin Panel. Edit Product";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<script>
    // переопределение валидации на стороне клиента
    $.validator.methods.range = function (value, element, param) {
        var globalizedValue = value.replace(",", ".");
        return this.optional(element) || (globalizedValue >= param[0] && globalizedValue <= param[1]);
    }
 
    $.validator.methods.number = function (value, element) {
        return this.optional(element) || /^-?(?:\d+|\d{1,3}(?:[\s\.,]\d{3})+)(?:[\.,]\d+)?$/.test(value);
    }
</script>


<div class="container">
    <div class="panel">
        <div class="panel-heading">
            <h2>Edit Product: @Model.Name</h2>
        </div>
    </div>
    @using (Html.BeginForm("Edit", "Seller", FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        <div class="panel-body">
            @Html.HiddenFor(p => p.ProductId)
            @foreach (var item in ViewData.ModelMetadata.Properties)
            {
                switch (item.PropertyName)
                {
                    case "ProductId":
                    case "ImageData":
                    case "ImageMimeType":
                    case "CountryId":
                    case "ShoeId":
                    case "AccessoryId":
                    case "ProductDestinationId":
                    case "StyleId":
                    case "UpWearId":
                    case "DownWearId":
                    case "DressCodeId":
                    case "ClothId":
                    case "FiberId":
                    case "TypeFiber":
                        break;
                    
                    case "CountryName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.CountryId, ViewBag.Countries as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                            break;
                    
                    case "ShoeName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.ShoeId, ViewBag.Shoes as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "AccessoryName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.AccessoryId, ViewBag.Accessories as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "StyleName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.StyleId, ViewBag.Styles as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "ProductDestinationName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.ProductDestinationId, ViewBag.ProductDestinations as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "UpWearName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.UpWearId, ViewBag.UpWears as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "DownWearName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.DownWearId, ViewBag.DownWears as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "DressCodeName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.DressCodeId, ViewBag.DressCodes as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "ClothName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.ClothId, ViewBag.Clothes as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "FiberName":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.DropDownListFor(m=>m.FiberId, ViewBag.Fibers as SelectList,"--select--", new { @class = "form-control" })
                        </div>
                        break;
                    case "Price":
                        <div class="panel-group">
                            <lable>@(item.DisplayName??item.PropertyName)</lable>
                            @Html.TextBoxFor(m=>m.Price, new { @class = "form-control" })
                            @Html.ValidationMessage(item.PropertyName)
                        </div>
                        break;
                   
                      default:
                            <div class="panel-group">
                                <lable>@(item.DisplayName ?? item.PropertyName)</lable>
                                @if (item.PropertyName == "Description")
                            {
                                    @Html.TextArea(item.PropertyName, null, new { @class = "form-control", rows = 5 })
                                }
                                else
                                {
                                    @Html.TextBox(item.PropertyName, null, new { @class = "form-control" })
                                }
                                @Html.ValidationMessage(item.PropertyName)
                            </div>
                            break;
                            }
                            }
                            <div class="form-group">
                                <div style="position: relative">
                                    <label>Image</label>
                                    <a class="btn" href='javascript:;'>
                                        Choose file
                                        <input type="file" name="Image" size="40"
                                               style="position: absolute; z-index:2;top:0;left:0;filter: alpha(opacity=0); opacity:0;
                                                                                                  background-color:transparent;color:transparent;"
                                               onchange='$("#upload-file-info").html($(this).val());' />
                                    </a>
                                    <span class='label label-info' id="upload-file-info"></span>
                                    <div>
                                        @if (Model.ImageData == null)
                                        {
                                            <div class="form-control-static">Not Image</div>
                                        }
                                        else
                                        {
                                            <img class="thumbnail" height="150" width="150"
                                                 src="@Url.Action("GetImage", "Product", new { Model.ProductId })" />
                                        }
                                    </div>
                                </div>
                            </div>

                            <div class="panel-footer">
                                <input type="submit" class="btn btn-primary" value="Save" />
                                @Html.ActionLink("Don't save and return to list of product!", "Index", null, new { @class = "btn btn-default" })
                            </div>
                        </div>
                }
    </div>
